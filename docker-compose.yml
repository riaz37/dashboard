version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: analytics-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: analytics
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - analytics-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: analytics-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - analytics-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: analytics-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - analytics-network

  # Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: analytics-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      - zookeeper
    networks:
      - analytics-network

  # Next.js Frontend
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: analytics-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
    depends_on:
      - server
    networks:
      - analytics-network
    volumes:
      - ./apps/web:/app
      - /app/node_modules

  # Nest.js Backend
  server:
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    container_name: analytics-server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/analytics?authSource=admin
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key
    depends_on:
      - mongodb
      - redis
      - kafka
    networks:
      - analytics-network
    volumes:
      - ./apps/server:/app
      - /app/node_modules

  # Python FastAPI Chat Bot
  ai-service:
    build:
      context: ./apps/ai-service
      dockerfile: Dockerfile
    container_name: analytics-ai-service
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - GOOGLE_API_KEY=your-google-api-key
      - NESTJS_API_URL=http://server:3001
    depends_on:
      - redis
      - server
    networks:
      - analytics-network
    volumes:
      - ./apps/ai-service:/app

volumes:
  mongodb_data:
  redis_data:

networks:
  analytics-network:
    driver: bridge
